package com.wakefield.myblog.controller;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.wakefield.myblog.model.BoardVO;
import com.wakefield.myblog.service.BoardService;

@Controller
public class BoardController {
	@Inject
	private BoardService service;
	@Inject
	private BoardVO vo;
	
	@RequestMapping(value = "/board", method = RequestMethod.GET)
	public String getBoardList(Model model) {
		model.addAttribute("boardList", service.getBoardList());
		return "board/main";
	}
	
	
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	public String getPostList(Model model, @PathVariable("id")String writer) {
		model.addAttribute("postList", service.getPostList(writer));
		return "blog/main";
	}
	
	@RequestMapping(value = "/{id}/post", method = RequestMethod.GET)
	public String postForm(Model model, @PathVariable("id")String writer) {
		
		return "blog/writeForm";
	}
	@RequestMapping(value = "/{id}/post", method = RequestMethod.POST)
	public String insertPost(Model model, @PathVariable("id")String writer) {
		//json으로 받아
		service.insertPost(vo);
		return "";
	}
	@RequestMapping(value = "/{id}/post", method = RequestMethod.PUT)
	public String updatePost(Model model, @PathVariable("id")String writer) {
		//수정 과정. 수정폼은 글쓰기 폼과 동일, 엥 그럼 게시물 번호는.
		//vo만들어
		service.updatePost(vo);
		return "";
	}
	@RequestMapping(value = "/{id}/{num}", method = RequestMethod.GET)
	public String viewPost(Model model, @PathVariable("id")String writer, @PathVariable("num")int idx) {
		vo.setIdx(idx);
		vo.setWriter(writer);
		model.addAttribute("post", service.viewPost(vo));
		return "blog/aPost";
	}
	@RequestMapping(value = "/{id}/{num}", method = RequestMethod.DELETE)
	public String deletePost(Model model, @PathVariable("id")String writer, @PathVariable("num")int idx) {
		vo.setIdx(idx);
		vo.setWriter(writer);
		service.deletePost(vo);
		return "";
	}
}
